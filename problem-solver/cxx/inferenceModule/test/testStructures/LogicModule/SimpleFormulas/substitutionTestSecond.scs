sc_node_tuple
    -> .._var_tuple;
    -> _tuple_for_nrel_relation_3;;

sc_node_norole_relation
    -> nrel_implication;
    -> nrel_relation_1;
    -> nrel_relation_2;
    -> nrel_relation_3;;

sc_node_role_relation
    -> rrel_1;
    -> rrel_2;
    -> rrel_3;
    -> rrel_4;
    -> rrel_main_key_sc_element;
    -> rrel_relation_1;
    -> rrel_relation_2;;

sc_node_class
    -> action_direct_inference;
    -> atomic_logical_formula;
    -> class_1;
    -> _var_class;
    -> second_target_class;;

sc_node_struct
    -> _inner_contour;;


@premise =
[*
    .._var_tuple
        _-> .._var_tuple_element
        (*
            _-> rrel_relation_1::
                .._var_1
                (*
                    _-> rrel_relation_2::
                        .._var_2
                        (*
                            _-> _var_class
                            (*
                                _<= nrel_relation_2::
                                    root_for_nrel_relation_2;;
                            *);;
                        *);;
                *);;
        *);
        _<= nrel_relation_1::
            _var_class_1_element
            (*
                _<- class_1;;
            *);;
*];;

@edge_var_class_to_var_class_element = (_var_class _-> _var_class_element);;
@edge_second_target_class_to_var_class_element = (second_target_class _-> _var_class_element);;

@conclusion =
[*
    _tuple_for_nrel_relation_3
        _<= nrel_relation_3::
            _var_class_1_element;
        _-> _inner_contour
            (*
                _-> _var_class;;
                _-> _var_class_element;;
                _-> second_target_class;;
                _-> @edge_var_class_to_var_class_element;;
                _-> @edge_second_target_class_to_var_class_element;;
            *);
    _var_class;
    _var_class_element;
    second_target_class;
    @edge_var_class_to_var_class_element;
    @edge_second_target_class_to_var_class_element;;
*];;

@edge_implication = (@premise => @conclusion);;

atomic_logical_formula
    -> @premise;
    -> @conclusion;;

@edge_implication
    <- nrel_implication;
    <- rrel_main_key_sc_element: lr_second;;

second_logic_rules -> rrel_1: { lr_second };;

second_target_template = [*
    second_target_class _-> _second_target_class_element;;
*];;

second_input_structure
    -> class_1_element;
    -> tuple_1;
    -> tuple_1_element;
    -> class_2_element;;

second_inference_logic_test_question
    -> rrel_1: second_target_template;
    -> rrel_2: second_logic_rules;
    -> rrel_3: second_input_structure;
    -> rrel_4: second_output_structure;;
