sc_node_class
    -> action_direct_inference;
    -> atomic_logical_formula;
    -> class_3;
    -> class_2;
    -> class_1;
    -> _class_value;;

sc_node_norole_relation
    -> nrel_idtf;
    -> nrel_relation_1;
    -> nrel_relation_2;
    -> nrel_implication;;

sc_node_role_relation
    -> rrel_1;
    -> rrel_2;
    -> rrel_3;
    -> rrel_4;
    -> rrel_relation_1;
    -> rrel_relation_2;
    -> rrel_main_key_sc_element;;

sc_node_tuple
    -> _tuple;
    -> tuple_1;;

@rule_condition = [*
    _class_1_element
        _<- class_1;;
    _class_1_element _=> nrel_relation_1:: _tuple;;
    _var_in_class_3_and_tuple
        _<- class_3;
        _<- _tuple;
        _-> _element;;
    _element _<- class_2;;
*];;

@rule_result = [*
    _element _-> rrel_relation_2:: _values_set;;
    _class_value
        _=> nrel_idtf:: [some_idtf];
        _<- _values_set;
        _<= nrel_relation_2:: root_for_nrel_relation_2;;
    second_input_structure _-> _class_value;;
    second_input_structure _-> _values_set;;
*];;

atomic_logical_formula
    -> @rule_condition;
    -> @rule_result;;

@rule_implication_arc = (@rule_condition => @rule_result);;
@rule_implication_arc
    <- nrel_implication;
    <- rrel_main_key_sc_element: lr_first;;

 first_logic_rules -> rrel_1: { lr_first };;


first_target_template = [*
    root_for_nrel_relation_2 _=> nrel_relation_2:: _var_destination_for_nrel_relation_2;;
*];;

first_input_structure
    -> class_1_element;
    -> tuple_1;
    -> tuple_1_element;
    -> class_2_element;;


class_1_element
    <- class_1;;
class_1_element => nrel_relation_1:
    tuple_1
    (*
        -> tuple_1_element
        (*
            <- class_3;;
            -> rrel_relation_1:
                class_2_element
                (*
                    <- class_2;;
                *);;
        *);;
    *);;


first_inference_logic_test_question
    -> rrel_1: first_target_template;
    -> rrel_2: first_logic_rules;
    -> rrel_3: first_input_structure;
    -> rrel_4: first_output_structure;;
